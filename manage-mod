#!/usr/bin/env perl

## no critic

use strict;
use warnings;

# XXX: Move config to ManageMod::Config

BEGIN {
  use FindBin qw( $RealBin $RealScript );
  use File::Basename;

  $ENV{MANAGE_MOD_VERSION}  = '0.01';
  $ENV{MANAGE_MOD_BASENAME} = basename( $RealScript );
  $ENV{MANAGE_MOD_CACHE_DIR} //= "$ENV{HOME}/.cache/$ENV{MANAGE_MOD_BASENAME}";
  $ENV{MANAGE_MOD_AGENT}     //= "HarleyPig's Mod Manager/$ENV{MANAGE_MOD_VERSION}";

  [ [ -d $ENV{MANAGE_MOD_CACHE_DIR} ] ]
    or mkdir $ENV{MANAGE_MOD_CACHE_DIR}
    or die "Unable to create cache dir.";
}

use lib "$RealBin/lib";

use Carp;
use Log::Any::Adapter;
use ManageMod::CurseForge;
use YAML::Syck;

use Log::Any '$log';

#-----------------------------------------------------------------------------
my $LogFile = "$ENV{MANAGE_MOD_CACHE_DIR}/$ENV{MANAGE_MOD_BASENAME}.log";
Log::Any::Adapter->set( 'File', "$LogFile", log_level => 'debug' );

#-----------------------------------------------------------------------------
my $config_file = './mods.cfg';
my $config      = LoadFile( './mods.cfg' );

my @expected_config = qw( mc_version channels directory mods );

my @missing;

for my $c ( @expected_config ) {
  push @missing, $c
    unless exists $config->{$c};
}

croak $log->fatalf( 'no %s found in %s', do { join ', ', @missing }, $config_file )
  if @missing;

croak $log->fatalf( 'directory %s does not exist or is not accessible', $config->{directory} )
  unless -r $config->{directory};

croak $log->fatalf( 'mods entry must be a hashref' )
  unless ref $config->{mods} eq 'HASH';

$DB::single++;

my @wanted = qw( filename filesize md5sum );

for my $mod ( keys %{$config->{mods}} ) {
  my $data = get_mod_data( $mod, $config->{mc_version}, $config->{channels} );

  $config->{mods}{$mod}{$_} = $data->{download}{$_} for @wanted;
}

DumpFile( $config_file, $config );
